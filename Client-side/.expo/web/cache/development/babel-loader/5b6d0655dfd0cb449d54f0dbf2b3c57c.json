{"ast":null,"code":"var _jsxFileName = \"/f/infinity-task/infinity-e-task-mobileapp/src/components/register-form.js\";\nimport * as React from \"react\";\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from 'react-native-paper';\nvar loginValidationSchema = yup.object().shape({\n  username: yup.string().min(3, function (_ref) {\n    var min = _ref.min;\n    return \"Username must be at least \" + min + \" characters\";\n  }).required('username is Required'),\n  password: yup.string().min(8, function (_ref2) {\n    var min = _ref2.min;\n    return \"Password must be at least \" + min + \" characters\";\n  }).required('Password is required'),\n  email: yup.string().required('email is required'),\n  phone: yup.string().required('Phone number is required'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required')\n});\nvar styles = StyleSheet.create({\n  loginContainer: {\n    width: '80%',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 10,\n    elevation: 10,\n    backgroundColor: '#e6e6e6'\n  },\n  textInput: {\n    height: 40,\n    width: '100%',\n    margin: 10,\n    backgroundColor: 'white',\n    borderColor: 'gray',\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 10\n  }\n});\nexport default function RegisterForm(props) {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: styles.loginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Fill your info.\"), React.createElement(Formik, {\n    validationSchema: loginValidationSchema,\n    initialValues: {\n      username: '',\n      password: '',\n      email: '',\n      phone: '',\n      firstname: '',\n      lastname: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      props.navigation.navigate('Profile');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        errors = _ref3.errors,\n        isValid = _ref3.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n      name: \"username\",\n      placeholder: \"Username\",\n      style: styles.textInput,\n      onChangeText: handleChange('username'),\n      onBlur: handleBlur('username'),\n      value: values.username,\n      keyboardType: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), errors.username && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, errors.username), React.createElement(TextInput, {\n      name: \"email\",\n      placeholder: \"email\",\n      style: styles.textInput,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), errors.email && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, errors.email), React.createElement(TextInput, {\n      name: \"phone\",\n      placeholder: \"phone\",\n      style: styles.textInput,\n      onChangeText: handleChange('phone'),\n      onBlur: handleBlur('phone'),\n      value: values.phone,\n      keyboardType: \"phone-pad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), errors.phone && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, errors.phone), React.createElement(TextInput, {\n      name: \"firstname\",\n      placeholder: \"First Name\",\n      style: styles.textInput,\n      onChangeText: handleChange('firstname'),\n      onBlur: handleBlur('firstname'),\n      value: values.firstname,\n      keyboardType: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), errors.firstname && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, errors.firstname), React.createElement(TextInput, {\n      name: \"lastname\",\n      placeholder: \"Last name\",\n      style: styles.textInput,\n      onChangeText: handleChange('lastname'),\n      onBlur: handleBlur('lastname'),\n      value: values.lastname,\n      keyboardType: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), errors.lastname && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, errors.lastname), React.createElement(TextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      style: styles.textInput,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), errors.password && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, errors.password), React.createElement(Button, {\n      onPress: handleSubmit,\n      title: \"Submit\",\n      Text: \"Register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }));\n  }));\n}","map":{"version":3,"sources":["/f/infinity-task/infinity-e-task-mobileapp/src/components/register-form.js"],"names":["React","yup","Formik","Button","loginValidationSchema","object","shape","username","string","min","required","password","email","phone","firstname","lastname","styles","StyleSheet","create","loginContainer","width","alignItems","backgroundColor","padding","elevation","textInput","height","margin","borderColor","borderWidth","hairlineWidth","borderRadius","RegisterForm","props","values","console","log","navigation","navigate","handleChange","handleBlur","handleSubmit","errors","isValid","fontSize","color"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport * as yup from 'yup'\nimport { Formik } from 'formik'\nimport {\n    View,\n    Text,\n    TextInput,\n    StyleSheet,\n} from 'react-native'\nimport { Button } from 'react-native-paper'\n\nconst loginValidationSchema = yup.object().shape({\n    username: yup\n        .string().min(3, ({ min }) => `Username must be at least ${min} characters`)\n        .required('username is Required'),\n    password: yup\n        .string()\n        .min(8, ({ min }) => `Password must be at least ${min} characters`)\n        .required('Password is required'),\n    email: yup\n        .string()\n        .required('email is required'),\n    phone: yup\n        .string()\n        .required('Phone number is required'),\n    firstname: yup\n        .string()\n        .required('First name is required'),\n    lastname: yup\n        .string()\n        .required('Last name is required'),\n})\nconst styles = StyleSheet.create({\n\n    loginContainer: {\n        width: '80%',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 10,\n        elevation: 10,\n        backgroundColor: '#e6e6e6'\n    },\n    textInput: {\n        height: 40,\n        width: '100%',\n        margin: 10,\n        backgroundColor: 'white',\n        borderColor: 'gray',\n        borderWidth: StyleSheet.hairlineWidth,\n        borderRadius: 10,\n    },\n})\n\nexport default function RegisterForm(props) {\n    return(\n    <View style={styles.loginContainer}>\n        <Text>Fill your info.</Text>\n        <Formik\n            validationSchema={loginValidationSchema}\n            initialValues={{ username: '', password: '',email:'', phone:'',firstname:'', lastname:'' }}\n            onSubmit={values => {console.log(values)\n                props.navigation.navigate('Profile')\n            }}\n        >\n            {({ handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                errors,\n                isValid, }) => (\n                <>\n                    <TextInput\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('username')}\n                        onBlur={handleBlur('username')}\n                        value={values.username}\n                        keyboardType=\"default\"\n                    />\n                    {errors.username &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.username}</Text>\n                    }\n                    <TextInput\n                        name=\"email\"\n                        placeholder=\"email\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('email')}\n                        onBlur={handleBlur('email')}\n                        value={values.email}\n                        keyboardType=\"email-address\"\n                    />\n                    {errors.email &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.email}</Text>\n                    }\n                    <TextInput\n                        name=\"phone\"\n                        placeholder=\"phone\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('phone')}\n                        onBlur={handleBlur('phone')}\n                        value={values.phone}\n                        keyboardType=\"phone-pad\"\n                    />\n                    {errors.phone &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.phone}</Text>\n                    }\n                    <TextInput\n                        name=\"firstname\"\n                        placeholder=\"First Name\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('firstname')}\n                        onBlur={handleBlur('firstname')}\n                        value={values.firstname}\n                        keyboardType=\"default\"\n                    />\n                    {errors.firstname &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.firstname}</Text>\n                    }\n                    <TextInput\n                        name=\"lastname\"\n                        placeholder=\"Last name\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('lastname')}\n                        onBlur={handleBlur('lastname')}\n                        value={values.lastname}\n                        keyboardType=\"default\"\n                    />\n                    {errors.lastname &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.lastname}</Text>\n                    }\n                    <TextInput\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        style={styles.textInput}\n                        onChangeText={handleChange('password')}\n                        onBlur={handleBlur('password')}\n                        value={values.password}\n                        secureTextEntry\n                    />\n                    {errors.password &&\n                        <Text style={{ fontSize: 10, color: 'red' }}>{errors.password}</Text>\n                    }\n                    <Button onPress={handleSubmit} title=\"Submit\" Text=\"Register\"/>\n                </>\n            )}\n        </Formik>\n    </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}